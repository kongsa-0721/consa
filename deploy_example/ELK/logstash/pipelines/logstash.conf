input {
  file {
    path => ["/logs/ask-bi-log/*.log*"]
    start_position => "beginning"
    sincedb_path => "/usr/share/logstash/sincedb/ask-bi-sincedb"
    codec => multiline {
             pattern => "^\s"
             what => "previous"
             auto_flush_interval => 1
    } 
  }
}

filter {
  json {
    source=> "message"
  }
  ruby {
    code => "
      require 'json'
      if event.get('message').is_a?(String)
        event.set('message', JSON.parse(event.get('message')))
      end
    "
  }
  mutate {
    rename => { "[message][timestamp]" => "timestamp" }
    rename => { "[message][user_id]" => "user_id" }
    rename => { "[message][request_id]" => "request_id" }
    rename => { "[message][host]" => "host" }
    rename => { "[message][service_type]" => "service_type" }
    rename => { "[message][duration]" => "duration" }
    rename => { "[message][result_code]" => "result_code" }
    rename => { "[message][module_type]" => "module_type" }
    rename => { "[message][input]" => "input" }
    rename => { "[message][output]" => "output" }
    rename => { "[message][debug]" => "debug" }
    rename => { "[message][url]" => "url" }
    rename => { "[message][semantic_project_id]" => "semantic_project_id" }
    rename => { "[message][semantic_scene_id]" => "semantic_scene_id" }
    rename => { "[message][semantic_project_name]" => "semantic_project_name" }
    rename => { "[message][semantic_scene_name]" => "semantic_scene_name" }
    rename => { "[message][cluster_id]" => "cluster_id" }
    remove_field => ["message"]
  }
  ruby {
    code => "
      ['timestamp', 'user_id', 'request_id', 'host', 'service_type', 'duration', 'result_code', 'module_type', 'input', 'output', 'debug'].each do |field|
        value = event.get(field)
        event.set(field, value.to_s) if value
      end
    "
  }
}   

output {
  stdout{
  	codec => rubydebug
  }
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "ask-bi-local-log-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "R3!ff4pp!"
  }
}
